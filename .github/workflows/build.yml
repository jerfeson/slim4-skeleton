name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.3']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 33306:3306
      nginx:
        image: nginx
        volumes:
          - "./default.conf":"/etc/nginx/conf.d/default.conf"
        ports:
          - 80:80
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pdo, pdo_mysql, intl, zip, json, xdebug
          coverage: true

      - name: Check PHP Version
        run: php -v

      - name: Check Composer Version
        run: composer -V

      - name: Check PHP Extensions
        run: php -m

      - name: check services
        run: wget -O- -S http://localhost

      - name: Start MySQL
        run: sudo systemctl start mysql

      - name: Create database
        run: mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS slim_skeleton CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;'

      - name: Copy settings
        run: cp config/env.exemplo.php config/development.php

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install tables
        run: composer console:migrate

